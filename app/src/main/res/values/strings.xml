<resources>
    <string name="app_name">GSC</string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="google_maps_key" templateMergeStrategy="preserve" translatable="false">AIzaSyC10vlD5osdzuti6vsLx_9phWSm6-nfmZI</string>
    <string name="kotlin_is_a_statically_typed_general_purpose_programming_language_developed_by_jetbrains_that_has_built_world_class_ides_like_intellij_idea_phpstorm_appcode_etc_it_was_first_introduced_by_jetbrains_in_2011_and_a_new_language_for_the_jvm_kotlin_is_object_oriented_language_and_a_better_language_than_java_but_still_be_fully_interoperable_with_java_code_kotlin_is_sponsored_by_google_announced_as_one_of_the_official_languages_for_android_development_in_2017_advantages_of_kotlin_language_easy_to_learn_basic_is_almost_similar_to_java_if_anybody_worked_in_java_then_easily_understand_in_no_time_kotlin_is_multi_platform_kotlin_is_supported_by_all_ides_of_java_so_you_can_write_your_program_and_execute_them_on_any_machine_which_supports_jvm_it_s_much_safer_than_java_it_allows_using_the_java_frameworks_and_libraries_in_your_new_kotlin_projects_by_using_advanced_frameworks_without_any_need_to_change_the_whole_project_in_java_kotlin_programming_language_including_the_compiler_libraries_and_all_the_tooling_is_completely_free_and_open_source_and_available_on_github_here_is_the_link_for_github_https_github_com_jetbrains_kotlin_applications_of_kotlin_language_you_can_use_kotlin_to_build_android_application_kotlin_can_also_compile_to_javascript_and_making_it_available_for_the_frontend_it_is_also_designed_to_work_well_for_web_development_and_server_side_development_kotlin_is_a_statically_typed_general_purpose_programming_language_developed_by_jetbrains_that_has_built_world_class_ides_like_intellij_idea_phpstorm_appcode_etc_it_was_first_introduced_by_jetbrains_in_2011_kotlin_is_object_oriented_language_and_a_better_language_than_java_but_still_be_fully_interoperable_with_java_code_a_constructor_is_a_special_member_function_that_is_invoked_when_an_object_of_the_class_is_created_primarily_to_initialize_variables_or_properties_a_class_needs_to_have_a_constructor_and_if_we_do_not_declare_a_constructor_then_the_compiler_generates_a_default_constructor_kotlin_has_two_types_of_constructors_primary_constructor_secondary_constructor_a_class_in_kotlin_can_have_at_most_one_primary_constructor_and_one_or_more_secondary_constructors_the_primary_constructor_initializes_the_class_while_the_secondary_constructor_is_used_to_initialize_the_class_and_introduce_some_extra_logic_explanation_when_we_create_the_object_add_for_the_class_then_the_values_5_and_6_passes_to_the_constructor_the_constructor_parameters_a_and_b_initialize_with_the_parameters_5_and_6_respectively_the_local_variable_c_contains_the_sum_of_variables_in_the_main_we_access_the_property_of_constructor_using_add_c_explanation_here_we_have_initialized_the_constructor_parameters_with_some_default_values_emp_id_100_and_emp_name_abc_when_the_object_emp_is_created_we_passed_the_values_for_both_the_parameters_so_it_prints_those_values_but_at_the_time_of_object_emp2_creation_we_have_not_passed_the_emp_name_so_initializer_block_uses_the_default_values_and_print_to_the_standard_output">Kotlin is a statically typed, general-purpose programming language developed by JetBrains, that has built world-class IDEs like IntelliJ IDEA, PhpStorm, Appcode, etc. It was first introduced by JetBrains in 2011 and a new language for the JVM. Kotlin is object-oriented language, and a “better language” than Java, but still be fully interoperable with Java code. Kotlin is sponsored by Google, announced as one of the official languages for Android Development in 2017. Advantages of Kotlin language: Easy to learn – Basic is almost similar to java. If anybody worked in java then easily understand in no time. Kotlin is multi-platform – Kotlin is supported by all IDEs of java so you can write your program and execute them on any machine which supports JVM. It’s much safer than Java. It allows using the Java frameworks and libraries in your new Kotlin projects by using advanced frameworks without any need to change the whole project in Java. Kotlin programming language, including the compiler, libraries and all the tooling is completely free and open source and available on github. Here is the link for Github https://github.com/JetBrains/kotlin Applications of Kotlin language: You can use Kotlin to build Android Application. Kotlin can also compile to JavaScript, and making it available for the frontend. It is also designed to work well for web development and server-side development.Kotlin is a statically typed, general-purpose programming language developed by JetBrains that has built world-class IDEs like IntelliJ IDEA, PhpStorm, Appcode, etc. It was first introduced by JetBrains in 2011.Kotlin is object-oriented language and a better language than Java, but still be fully interoperable with Java code. A constructor is a special member function that is invoked when an object of the class is created primarily to initialize variables or properties. A class needs to have a constructor and if we do not declare a constructor, then the compiler generates a default constructor. Kotlin has two types of constructors – Primary Constructor Secondary Constructor A class in Kotlin can have at most one primary constructor, and one or more secondary constructors. The primary constructor initializes the class, while the secondary constructor is used to initialize the class and introduce some extra logic. Explanation: When we create the object add for the class then the values 5 and 6 passes to the constructor. The constructor parameters a and b initialize with the parameters 5 and 6 respectively. The local variable c contains the sum of variables. In the main, we access the property of constructor using ${add.c}. Explanation: Here, we have initialized the constructor parameters with some default values emp_id = 100 and emp_name = “abc”. When the object emp is created we passed the values for both the parameters so it prints those values. But, at the time of object emp2 creation, we have not passed the emp_name so initializer block uses the default values and print to the standard output.</string>
    <string name="title_activity_splash_screen">SplashScreen</string>
    <!-- Strings used for fragments for navigation -->
    <string name="first_fragment_label">First Fragment</string>
    <string name="second_fragment_label">Second Fragment</string>
    <string name="next">Next</string>
    <string name="previous">Previous</string>

    <string name="hello_first_fragment">Hello first fragment</string>
    <string name="hello_second_fragment">Hello second fragment. Arg: %1$s</string>

</resources>